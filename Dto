package com.example.demo.service;

import com.example.demo.dto.PersonaDTO;
import com.example.demo.model.Persona;
import com.example.demo.repository.PersonaRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class PersonaService {

    @Autowired
    private PersonaRepository personaRepository;

    public List<PersonaDTO> getAllPersonas() {
        List<Persona> personas = personaRepository.findAll();
        return personas.stream()
                .map(this::convertToDTO)
                .collect(Collectors.toList());
    }

    public Optional<PersonaDTO> getPersonaById(Long id) {
        Optional<Persona> personaOptional = personaRepository.findById(id);
        return personaOptional.map(this::convertToDTO);
    }

    public PersonaDTO savePersona(PersonaDTO personaDTO) {
        Persona persona = convertToEntity(personaDTO);
        Persona savedPersona = personaRepository.save(persona);
        return convertToDTO(savedPersona);
    }

    public PersonaDTO updatePersona(Long id, PersonaDTO personaDTO) {
        Optional<Persona> personaOptional = personaRepository.findById(id);
        if (personaOptional.isPresent()) {
            Persona personaToUpdate = personaOptional.get();
            personaToUpdate.setNumeroDocumento(personaDTO.getNumeroDocumento());
            personaToUpdate.setNombre(personaDTO.getNombre());
            personaToUpdate.setApellido(personaDTO.getApellido());
            personaToUpdate.setFechaNacimiento(personaDTO.getFechaNacimiento());
            personaToUpdate.setCiudad(personaDTO.getCiudad());
            personaToUpdate.setCorreo(personaDTO.getCorreo());
            personaToUpdate.setTelefono(personaDTO.getTelefono());
            personaToUpdate.setOcupacion(personaDTO.getOcupacion());
            Persona updatedPersona = personaRepository.save(personaToUpdate);
            return convertToDTO(updatedPersona);
        }
        return null;
    }

    public void deletePersona(Long id) {
        personaRepository.deleteById(id);
    }

    // Métodos de conversión entre Entity y DTO
    private PersonaDTO convertToDTO(Persona persona) {
        return new PersonaDTO(
                persona.getNumeroDocumento(),
                persona.getNombre(),
                persona.getApellido(),
                persona.getFechaNacimiento(),
                persona.getCiudad(),
                persona.getCorreo(),
                persona.getTelefono(),
                persona.getOcupacion()
        );
    }

    private Persona convertToEntity(PersonaDTO personaDTO) {
        return new Persona(
                personaDTO.getNumeroDocumento(),
                personaDTO.getNombre(),
                personaDTO.getApellido(),
                personaDTO.getFechaNacimiento(),
                personaDTO.getCiudad(),
                personaDTO.getCorreo(),
                personaDTO.getTelefono(),
                personaDTO.getOcupacion()
        );
    }
}
